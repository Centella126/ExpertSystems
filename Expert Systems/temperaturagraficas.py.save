import Adafruit_DHT
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import time

# ConfiguraciÃ³n del sensor
DHT_SENSOR = Adafruit_DHT.DHT11
DHT_PIN = 4  # Cambia este valor si usas otro GPIO en tu Raspberry Pi

# Inicializar listas para almacenar datos
temperaturas = []
humedades = []
tiempos = []

# ConfiguraciÃ³n de la grÃ¡fica en matplotlib
fig, (ax1, ax2) = plt.subplots(2, 1)
fig.suptitle("Temperatura y Humedad en Tiempo Real")

# FunciÃ³n para actualizar la grÃ¡fica en tiempo real
def actualizar(i):
    # Leer datos del sensor
    humedad, temperatura = Adafruit_DHT.read(DHT_SENSOR, DHT_PIN)
    
    if humedad is not None and temperatura is not None:
        # Agregar datos a las listas
        tiempos.append(time.time())
        temperaturas.append(temperatura)
        humedades.append(humedad)

        # Limitar el nÃºmero de puntos en la grÃ¡fica
        tiempos_grafica = tiempos[-20:]  # MostrarÃ¡ solo los Ãºltimos 20 puntos
        temperaturas_grafica = temperaturas[-20:]
        humedades_grafica = humedades[-20:]

        # Actualizar grÃ¡fica de temperatura
        ax1.clear()
        ax1.plot(tiempos_grafica, temperaturas_grafica, color='red')
        ax1.set_ylabel("Temperatura (Â°C)")
        ax1.set_ylim(0, 50)

        # Actualizar grÃ¡fica de humedad
        ax2.clear()
        ax2.plot(tiempos_grafica, humedades_grafica, color='blue')
        ax2.set_ylabel("Humedad (%)")
        ax2.set_ylim(0, 100)
        
    else:
        print("Error al leer el sensor DHT11")

# Crear la animaciÃ³n
ani = animation.FuncAnimation(fig, actualizar, interval=2000)

plt.show()
